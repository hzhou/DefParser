subcode: _autoload
    $sub filter_rule($name, $rule, $nonterm_list)
	my $type=$rule->{type}
	$if $type eq "nonterm"
	    push @$nonterm_list, $rule->{value}
	$elif $type eq "RECURSE"
	    die "error RECURSE\n"
	$elif $type eq "right"
	    $rule->{recurse}=$name
	$elif $type =~ /group|alt/
	    my $tlist=$rule->{value}
	    $foreach $t in @$tlist
		$if $t->{type} eq "RECURSE"
		    $t->{type}="nonterm"
		    $t->{value}=$name
		$else
		    filter_rule($name, $t, $nonterm_list)
	$elif $type =~ /[*?]/
	    filter_rule($name, $rule->{value}, $nonterm_list)

    $sub print_rule($rule, $nonterm_list)
	$if ref($rule) eq "SCALAR"
	    print $rule, " "
	$elif ref($rule) eq "HASH"
	    my $type=$rule->{type}
	    $if $type =~ /^(term|nonterm|keyword)/
		$if defined $nonterm_list and $type eq "nonterm"
		    push @$nonterm_list, $rule->{value}
		$type=uc($type)
		print "($type: $rule->{value}) "
	    $elif $type =~ /group|alt/
		$type=uc($type)
		print "($type: "
		my $tlist=$rule->{value}
		$foreach $t in @$tlist
		    print_rule($t, $nonterm_list)
		print ") "
	    $elif $type =~ /[*?]/
		print "($type: "
		print_rule($rule->{value}, $nonterm_list)
		print ") "
	    $else
		print "($type) "
	$else
	    print $rule

# -------------------------------
subcode: print_grammar
    &call topdown_loop, name, $top_symbol
	my $rulelist=$rules{$name}
	print "$name:\n"
	$foreach $r in @$rulelist
	    print "    "
	    print_rule($r, \@name_list)
	    print "\n"
	print "\n"  

# -------------------------------
subcode: filter_grammar
    &call topdown_loop, name, $top_symbol
	my $rulelist=$rules{$name}
	$foreach $r in @$rulelist
	    filter_rule($name, $r, \@name_list)

